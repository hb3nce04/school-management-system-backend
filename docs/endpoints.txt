[PLEASE NOTE: THIS DOCUMENT IS MOSTLY AI GENERATED!]

[CRUD ENDPOINTS FOR DATABASE OPERATIONS]

[App only stores one school's data, later we may implement microservices or other distributed architecture)

Students:
    GET /students: Retrieve a list of all students, optionally filtered and paginated.
    GET /students/{id}: Retrieve a specific student by ID.
    POST /students: Create a new student.
    PUT /students/{studentId}: Update an existing student.
    DELETE /students/{id}: Delete a student.

Courses:
    GET /courses: Retrieve a list of all courses, optionally filtered and paginated.
    GET /courses/{id}: Retrieve a specific course by ID.
    POST /courses: Create a new course.
    PUT /courses/{id}: Update an existing course.
    DELETE /courses/{id}: Delete a course.

Classes:
    GET /classes: Retrieve a list of all classes, optionally filtered and paginated.
    GET /classes/{id}: Retrieve a specific class by ID.
    POST /classes: Create a new class.
    PUT /classes/{id}: Update an existing class.
    DELETE /classes/{id}: Delete a class.

Teachers:
    GET /teachers: Retrieve a list of all teachers, optionally filtered and paginated.
    GET /teachers/{id}: Retrieve a specific teacher by ID.
    POST /teachers: Create a new teacher.
    PUT /teachers/{id}: Update an existing teacher.
    DELETE /teachers/{id}: Delete a teacher.

Enrollments:
    POST /enrollments: Enroll a student in a course.
    DELETE /enrollments/{id}: Unenroll a student from a course.

Additional Endpoints:
    - Announcements: Create, update, delete, and retrieve announcements.
    - Events: Create, update, delete, and retrieve events.
    - Library: Manage library items, loans, and fines.
    - Reports: Generate various reports (e.g., student grades, attendance, financial).